//	Variables: Valores que se almacenan y pueden variar;
@primary: #448;
@secondary: #c36;

//	Nesting: Anidacion de estilos;
	nav{
		.flexbox(@fj:space-between);
		.normalize(-.5rem -.5rem 0; @p:.5rem);
		position: sticky;
		top:0;
		z-index: 2;
		background: linear-gradient(to right, @secondary, @primary);
		a{
			display: block;
			.normalize(@p:.5rem);
			color: #eee;
			text-decoration: none;
			&:hover{
				text-shadow: 0 0 .5rem #eee;
			}
		}
		button{
			border: .1rem solid #eee;
			color: #eee;
			background-color: transparent;
			&:hover{
				color: #c36;
				background-color: #eee;
			}
			@media screen and (min-width: 768px){
				display: none;
			}
		}
		.menu{
			&:extend(.unstyled);
			width: 100%;
			max-height: 0;
			overflow: hidden;
			transition: all .5s ease-in;
			&.active{ max-height: 640px; }
			// menu pantallas medianas (Tablets)
			@media screen and (min-width: 768px){
				.flexbox;
				width: auto;
				max-height: 640px;
			}
			li{
				position: relative;
				&::before{
					content:'';
					position:absolute;
					bottom:0;
					left:0;
					width:.15rem;
					height: .15rem;
					background: linear-gradient(to right, #0000, #eee);
					opacity: 0;
					transition: all 1s ease-out; /*property duration timing delay*/
				}
				&:hover::before{
					width:100%;
					opacity: .9;
				}
			}
		}
	}
	#header{
		position: relative;
		.normalize(0 -.5rem; @p:1rem);
		.flexbox(column);
		height: min(100vh, 640px); // vh: viewport height;
		color: #eee;
		font-size: calc(2vw + .5rem); // vw: viewport width
		.header{
			h1, p{
				&:extend(.unstyled);
				text-shadow: 0 0 2vw #333;
			}
		}
		.slide{
			li{
				position: absolute;
				top:0;
				left:0;
				width: 100%;
				height: 100%;
				z-index: -1;
				opacity: 0;
				transition: all 1s ease-in;
				.bg(12);
				&.active{ opacity: 1; }
			}
		}
		button{
			.normalize(@p: 1rem);
			position: absolute;
			top:0;
			bottom:0;
			color: #eee;
			background-color: transparent;
			font-size: calc(2vw + 1rem);
			&.icon-prev{ left:0; }
			&.icon-next{ right:0; }
		}
	}
//	Mixins: Selectores que se usan como atributos;
	.unstyled{
		.normalize;
		list-style: none;
		text-decoration: none;
	}

//	Mixins Parametricos: Estilos que reciben parametros;
	.normalize(@m:0; @b:0; @p:0){
		margin: @m;
		border: @b;
		padding: @p;
	}
	.flexbox(@fd: row; @fj: center; @fa: center; @fw: wrap; @f: flex){
		display: @f;
		flex-direction: @fd;
		justify-content: @fj;
		align-items: @fa;
		flex-wrap: @fw;
	}
//	Mixins Recursivos: Estilos que se repiten en base a una condicion;
	.bg(@r; @i:1) when (@i <= @r){ // condicion
		&:nth-child(@{i}){
			background: radial-gradient(
				circle at top left,
				hsl(@i * 30, 50%, 60%),
				hsl(@i * 90, 50%, 30%)
		)	}	.bg(@r; @i + 1); // repeticion
	}